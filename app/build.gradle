plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'dagger.hilt.android.plugin'
}
android {
    namespace 'com.vinaylogics.mvvmnewsapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.vinaylogics.mvvmnewsapp"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            useJUnitPlatform()
        }

    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    buildFeatures {
        compose true
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.22')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.compose.ui:ui:1.4.3'
    implementation 'androidx.compose.material:material:1.4.3'
    implementation platform('androidx.compose:compose-bom:2023.06.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.06.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Junit 5 dependencies
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
    def junit_version = "5.9.3"
    testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
    testImplementation "org.junit.vintage:junit-vintage-engine:$junit_version"
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    androidTestImplementation "org.junit.jupiter:junit-jupiter:$junit_version"

    //xml Layout
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'



    def lifecycle_version = '2.6.1'
    def arch_version = "2.2.0"

    // Architectural Component
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    // optional - Test helpers for Lifecycle runtime
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"

    // testing
    // https://mvnrepository.com/artifact/app.cash.turbine/turbine
    testImplementation 'app.cash.turbine:turbine:1.0.0'
    // https://mvnrepository.com/artifact/com.google.truth/truth
    testImplementation 'com.google.truth:truth:1.1.5'
    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-test
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2'

    //coroutine
    def coroutine_version = "1.7.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // room
    def room_version = "2.5.2"

    implementation "androidx.room:room-runtime:$room_version"
    kapt  "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    //dagger hilt
    def dagger_hilt_version = "2.46.1"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    // For instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    // Navigation
    def nav_version = "2.6.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    //databinding
    implementation 'androidx.databinding:databinding-common:8.0.2'



    // Scale sizing
    def scale_pixel_version ="1.1.0"
    implementation "com.intuit.ssp:ssp-android:$scale_pixel_version"
    implementation "com.intuit.sdp:sdp-android:$scale_pixel_version"

    //retrofit2
    def retrofit_version = "2.9.0"
    def okhttp_version = "4.11.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"



    // Glide
    def glide_version = "4.15.1"
    // https://mvnrepository.com/artifact/com.github.bumptech.glide/glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"



}